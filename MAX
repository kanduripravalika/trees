class Node:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None
def max_level_sum(root):
    if root is None:
        return 0
    max_sum = float('-inf')
    queue = [root]
    while queue:
        level_sum = 0
        level_size = len(queue)
        for _ in range(level_size):
            node = queue.pop(0)
            level_sum += node.value
            if node.left:
                queue.append(node.left)
            if node.right:
                queue.append(node.right)
        max_sum = max(max_sum, level_sum)
    return max_sum
tree = Node(1)
tree.left = Node(2)
tree.right = Node(3)
tree.left.left = Node(4)
tree.left.right = Node(8)
tree.right.left = Node(6)
tree.right.right = Node(7)
max_sum = max_level_sum(tree)
print("Maximum level sum in the binary tree:", max_sum)

EXCEPTED OUTPUT:

Maximum level sum in the binary tree: 25
