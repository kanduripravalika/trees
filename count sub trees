
 class Node:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None
def count_subtrees_with_sum(root, target_sum):
    if root is None:
        return 0
    count = 0
    left_sum = count_subtrees_with_sum(root.left, target_sum)
    right_sum = count_subtrees_with_sum(root.right, target_sum)
    current_sum = root.value + left_sum + right_sum
    if current_sum == target_sum:
        count += 1
    return count + left_sum + right_sum
tree = Node(5)
tree.left = Node(4)
tree.right = Node(8)
tree.left.left = Node(11)
tree.left.left.left = Node(7)
tree.left.left.right = Node(2)
tree.right.left = Node(13)
tree.right.right = Node(4)
tree.right.right.left = Node(5)
tree.right.right.right = Node(1)
target_sum = 22
subtree_count = count_subtrees_with_sum(tree, target_sum)
print("Number of subtrees with sum", target_sum, ":", subtree_count)


  EXCEPTED OUTPUT:
Number of subtrees with sum 22: 3
